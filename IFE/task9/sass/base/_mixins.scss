@mixin size($width, $height: $width) {
    width: $width;
    height: $height;
}

@mixin prefix($prop, $val, $vendors: webkit moz ms o) {
    @if $vendors {
        @each $vendor in $vendors {
            #{'-' + $vendor + '-' + $prop}: #{$val};
        }
    }
    #{$prop}: #{$val};
}

@mixin rounded($radius: .5em) {
    @include prefix(border-radius, $radius, webkit moz);
}

@mixin borderBox {
    @include prefix(box-sizing, border-box, webkit moz);
}

@mixin bar($max: 100, $min: 10, $step: 5, $padding: 32px) {
    @for $i from $min through $max {
        .w-#{$i}:after {
            width: calc(#{$i}% - #{$padding});
        }
        $i: $i + $step;
    }
}

%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}

%fa {
    display: inline-block;
    font: normal normal normal 14px/1 FontAwesome;
    font-size: inherit;
    text-rendering: auto;
    -webkit-font-smoothing: antialiased;
}

%blue-top-border {
    @include prefix(box-shadow, inset 0 3px 0 0 $blue, webkit moz);
}

%blue-border {
    @include prefix(box-shadow, inset 0 0 0 2px $blue, webkit moz);
}

%blue-left-border {
    @include prefix(box-shadow, inset 3px 0 0 0 $headerColor, webkit moz);
}

%green-left-border {
    @include prefix(box-shadow, inset 3px 0 0 0 $green, webkit moz);
}

%red-left-border {
    @include prefix(box-shadow, inset 3px 0 0 0 $red, webkit moz);
}

%yellow-left-border {
    @include prefix(box-shadow, inset 3px 0 0 0 $yellow, webkit moz);
}
