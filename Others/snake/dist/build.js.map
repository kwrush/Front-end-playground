{"version":3,"sources":["webpack:///webpack/bootstrap cd40fdbba58b6eb5c9eb","webpack:///./src/main.js","webpack:///./src/game.js","webpack:///./src/food.js","webpack:///./src/view.js","webpack:///./src/snake.js"],"names":["snake","view","gameCtrl","speed","init","start","DEF_SPEED","KEY_LEFT","KEY_UP","KEY_RIGHT","KEY_DOWN","_gameLoop","_moving","_score","options","food","size","listenKeyDown","keyCode","handleKeyDown","listenButtonDown","prepare","toggleRestartDialog","updateScore","x","Math","floor","width","y","height","makeFood","stop","setInterval","run","clearInterval","move","collisionCheck","canEat","grow","render","head","getHead","i","len","getLength","node","nodeAt","dir","moveTo","goTo","snakeX","snakeY","nextStep","FOOD_COLOR","color","random","_canPutFoodAt","DEF_WIDTH","DEF_HEIGHT","DEF_BORDER_COLOR","DEF_BG_COLOR","borderColor","borderCOlor","bgColor","scoreView","document","getElementById","_initCanvas","_initDialog","canvas","ctx","getContext","canvasDim","getBoundingClientRect","dialogView","restartBtn","style","top","left","callback","addEventListener","evt","window","event","stopPropagation","target","score","innerHTML","clearRect","drawBackground","drawSnake","drawFood","show","display","initCanvas","rect","fillStyle","fill","strokeStyle","lineWidth","stroke","fillRect","DEF_SIZE","BODY_COLOR","HEAD_COLOR","_makeBodyNode","nodeX","nodeY","stepSize","bodyColor","headColor","body","count","addNode","nextNode","currNode","Error","unshift","newHead","pop","push","index","length"],"mappings":"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","file":"build.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap cd40fdbba58b6eb5c9eb","import GameController from './game.js';\r\nimport GameView from './view.js';\r\nimport Snake from './snake.js';\r\n\r\nlet snake = new Snake();\r\nlet view = new GameView();\r\n\r\nlet gameCtrl = new GameController({\r\n    snake: snake,\r\n    view: view,\r\n    speed: 150\r\n});\r\n\r\ngameCtrl.init();\r\ngameCtrl.start();\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import Food from './food.js';\r\n\r\nconst DEF_SPEED = 200;   // snake speed(redrawing interval), units in ms\r\n\r\nconst KEY_LEFT = 37;\r\nconst KEY_UP = 38;\r\nconst KEY_RIGHT = 39;\r\nconst KEY_DOWN = 40;\r\n\r\nlet _gameLoop = null;\r\nlet _moving = false;\r\nlet _score = 0;\r\n\r\nexport default class {\r\n    constructor(options) {\r\n        this.snake = options.snake;\r\n        this.view = options.view;\r\n        this.speed = options.speed || DEF_SPEED;\r\n        this.food = new Food(this.snake.size);\r\n    }\r\n\r\n    init() {\r\n        // bind listeners\r\n        this.view.listenKeyDown((keyCode) => {\r\n            this.handleKeyDown(keyCode);\r\n        });\r\n        this.view.listenButtonDown(() => {\r\n            this.prepare();\r\n            this.start();\r\n        });\r\n\r\n        this.prepare();\r\n    }\r\n\r\n    prepare() {\r\n        _score = 0;\r\n        this.view.toggleRestartDialog(false);\r\n        this.view.updateScore(_score);\r\n\r\n        // Give snake an initial position\r\n        let x = Math.floor(this.view.width / 2);\r\n        let y = Math.floor(this.view.height / 2);\r\n        this.snake.init(x, y);\r\n\r\n        this.food.makeFood(this.snake, this.view.width, this.view.height);\r\n    }\r\n\r\n    start() {\r\n        this.stop();\r\n        _gameLoop = setInterval(() => {\r\n            this.run();\r\n        }, this.speed);\r\n    }\r\n\r\n    stop() {\r\n        clearInterval(_gameLoop);\r\n        _gameLoop = null;\r\n    }\r\n\r\n    // game loop here\r\n    run() {\r\n        this.snake.move();\r\n        if (this.collisionCheck()) {\r\n            this.stop();\r\n            this.view.toggleRestartDialog(true);\r\n            return;\r\n        }\r\n        if (this.canEat()) {\r\n            this.snake.grow();\r\n            _score++;\r\n            this.view.updateScore(_score);\r\n            this.food.makeFood(this.snake, this.view.width, this.view.height);\r\n        }\r\n        this.view.render(this.snake, this.food, _score);\r\n        _moving = false;\r\n    }\r\n\r\n    // Return true if snake head's position is the same as the food's position\r\n    canEat() {\r\n        let head = this.snake.getHead();\r\n        if (head.x === this.food.x && head.y === this.food.y) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // check collision\r\n    collisionCheck() {\r\n        let head = this.snake.getHead();\r\n        for (let i = 0, len = this.snake.getLength() - 1; i < len; i++) {\r\n            let node = this.snake.nodeAt(i);\r\n            if (node.x === head.x && node.y === head.y) {\r\n                return true;\r\n            }\r\n        }\r\n        return head.x < 0 || head.x >= this.view.width || head.y < 0 || head.y >= this.view.height;\r\n    }\r\n\r\n    // Handle keydow action, pressing arrow keys to move snake\r\n    handleKeyDown(keyCode) {\r\n        if (_gameLoop === null) return;\r\n        let dir = 0;\r\n        if (keyCode === KEY_UP) {\r\n            dir = 1;\r\n        } else if (keyCode === KEY_RIGHT) {\r\n            dir = 2;\r\n        } else if (keyCode === KEY_DOWN) {\r\n            dir = 3;\r\n        }\r\n        if (!_moving) this.moveTo(dir);\r\n    }\r\n\r\n    // 0: left, 1: up, 2: right, 3: down\r\n    moveTo(dir) {\r\n        let goTo = {\r\n            x: this.snake.snakeX,\r\n            y: this.snake.snakeY\r\n        };\r\n\r\n        if (!!goTo.x) {\r\n            if (dir === 1 || dir === 3) {\r\n                goTo.x = 0;\r\n                goTo.y = dir - 2;\r\n            }\r\n        } else if (!!goTo.y) {\r\n            if (dir === 0 || dir === 2) {\r\n                goTo.x = dir - 1;\r\n                goTo.y = 0;\r\n            }\r\n        }\r\n\r\n        this.snake.nextStep(goTo);\r\n        _moving = true;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/game.js","const FOOD_COLOR = '#C46243';\r\n\r\nexport default class {\r\n    constructor(size) {\r\n        this.size = size || 10;\r\n        this.color = FOOD_COLOR;\r\n    }\r\n\r\n    makeFood(snake, width, height) {\r\n        while(true) {\r\n            this.x = Math.floor(Math.random() * width / this.size) * this.size;\r\n            this.y = Math.floor(Math.random() * height / this.size) * this.size;\r\n            if (_canPutFoodAt(snake, this.x, this.y)) return;\r\n        }\r\n    }\r\n}\r\n\r\nfunction _canPutFoodAt(snake, x, y) {\r\n    for (let i = 0, len = snake.getLength(); i < len; i++) {\r\n        let node = snake.nodeAt(i);\r\n        if (node.x === x && node.y === y) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/food.js","const DEF_WIDTH = 640;   // default canvas dimension, unit in px\r\nconst DEF_HEIGHT = 480;\r\nconst DEF_BORDER_COLOR = '#333';\r\nconst DEF_BG_COLOR = '#fcfcfc';\r\n\r\nexport default class {\r\n    constructor(options) {\r\n        options = options || {};\r\n        this.width = options.width || DEF_WIDTH;\r\n        this.height = options.height || DEF_HEIGHT;\r\n        this.borderColor = options.borderCOlor || DEF_BORDER_COLOR;\r\n        this.bgColor = options.bgColor || DEF_BG_COLOR;\r\n        this.scoreView = document.getElementById('score');\r\n\r\n        this._initCanvas();\r\n        this._initDialog();\r\n    }\r\n\r\n    // Make canvas instance\r\n    _initCanvas() {\r\n        this.canvas = document.getElementById('canvas');\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        this.canvas.width = this.width;\r\n        this.canvas.height = this.height;\r\n    }\r\n\r\n    _initDialog() {\r\n        let canvasDim = this.canvas.getBoundingClientRect();\r\n        this.dialogView = document.getElementById('restart');\r\n        this.restartBtn = document.getElementById('restart-btn');\r\n\r\n        this.dialogView.style.top = canvasDim.top + 'px';\r\n        this.dialogView.style.left = canvasDim.left + 'px';\r\n        this.dialogView.style.width = canvasDim.width + 'px';\r\n        this.dialogView.style.height = canvasDim.height + 'px';\r\n    }\r\n\r\n    listenKeyDown(callback) {\r\n        document.addEventListener('keydown', (evt) => {\r\n            evt = evt || window.event;\r\n            callback(evt.keyCode);\r\n        }, false);\r\n    }\r\n\r\n    listenButtonDown(callback) {\r\n        document.addEventListener('click', (evt) => {\r\n            evt = evt || window.event;\r\n            evt.stopPropagation();\r\n            let target = evt.target;\r\n            if (target === this.restartBtn) {\r\n                callback();\r\n            }\r\n        });\r\n    }\r\n\r\n    updateScore(score) {\r\n        this.scoreView.innerHTML = '' + score;\r\n    }\r\n\r\n    render(snake, food, score) {\r\n        this.ctx.clearRect(0, 0, this.width, this.height);\r\n        this.drawBackground();\r\n        this.drawSnake(snake);\r\n        this.drawFood(food);\r\n    }\r\n\r\n    toggleRestartDialog(show) {\r\n        let display = show ? 'block' : 'none';\r\n        this.dialogView.style.display = display;\r\n    }\r\n\r\n    // Draw canvas background\r\n    drawBackground() {\r\n        if (!this.canvas || !this.ctx) {\r\n            this.initCanvas();\r\n        }\r\n\r\n        // draw background and border\r\n        this.ctx.rect(0, 0, this.width, this.height);\r\n        this.ctx.fillStyle = this.bgColor;\r\n        this.ctx.fill();\r\n\r\n        this.ctx.strokeStyle = this.borderColor;\r\n        this.ctx.lineWidth = 2;\r\n        this.ctx.stroke();\r\n    }\r\n\r\n    // Draw the snake at the given position(x, y)\r\n    drawSnake(snake) {\r\n        for (let i = 0, len = snake.getLength(); i < len; i++) {\r\n            let node = snake.nodeAt(i);\r\n            if (node) {\r\n                this.ctx.fillStyle = node.color;\r\n                this.ctx.fillRect(node.x, node.y, snake.size, snake.size);\r\n            }\r\n        }\r\n    }\r\n\r\n    drawFood(food) {\r\n        //let pos = makeFood(snake, this.width, this.height);\r\n        this.ctx.fillStyle = food.color;\r\n        this.ctx.fillRect(food.x, food.y, food.size, food.size);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/view.js","const DEF_SIZE = 10;\r\nconst BODY_COLOR = '#333';\r\nconst HEAD_COLOR = '#0089A7';\r\n\r\nfunction _makeBodyNode(nodeX, nodeY) {\r\n    return {\r\n        color: BODY_COLOR,\r\n        x: nodeX,\r\n        y: nodeY\r\n    };\r\n}\r\n\r\nexport default class {\r\n    constructor(options) {\r\n        options = options || {};\r\n        this.size = DEF_SIZE;               // node size\r\n        this.stepSize = this.size;          // size of moving step\r\n        this.bodyColor = options.bodyColor || BODY_COLOR;   // body color\r\n        this.headColor = options.headColor || HEAD_COLOR;   // head color\r\n    }\r\n\r\n    init(x, y) {\r\n        this.body = [];  // head is the last element\r\n        this.nextStep({\r\n            x: 1,\r\n            y: 0\r\n        });\r\n\r\n        // 3 nodes long initially □□□\r\n        let count = 0;\r\n        while (count < 3) {\r\n            let node = _makeBodyNode(x - this.stepSize * count, y);\r\n            this.addNode(node);\r\n            count++;\r\n        }\r\n    }\r\n\r\n    // Snake moves in the given direction\r\n    move() {\r\n        let count = 0;\r\n\r\n        while(count < this.getLength()) {\r\n            let nextNode = this.body[count + 1];\r\n            let currNode = this.body[count];\r\n\r\n            // move current node to the position of the next node,\r\n            if (nextNode) {\r\n                currNode.x = nextNode.x;\r\n                currNode.y = nextNode.y;\r\n            } else {\r\n                // move head one step further in the given direction\r\n                currNode.x = currNode.x + this.snakeX * this.stepSize;\r\n                currNode.y = currNode.y + this.snakeY * this.stepSize;\r\n            }\r\n\r\n            count++;\r\n        }\r\n    }\r\n\r\n    nextStep(dir) {\r\n        this.snakeX = dir.x;\r\n        this.snakeY = dir.y;\r\n    }\r\n\r\n    // Append one node to the body\r\n    addNode(node) {\r\n        if (!node) {\r\n            throw new Error('node is undefined.');\r\n        }\r\n        // if length is 0, then it's the head\r\n        if (this.getLength() === 0) {\r\n            node.color = this.headColor;\r\n        }\r\n        this.body.unshift(node);\r\n        return this;\r\n    }\r\n\r\n    // Make snake one node longer\r\n    grow() {\r\n        let head = this.getHead();\r\n        let newHead = _makeBodyNode(head.x, head.y);\r\n        head.color = BODY_COLOR;\r\n        newHead.color = HEAD_COLOR;\r\n        // pop the old head and add it to tail\r\n        this.body.pop();\r\n        this.body.unshift(head);\r\n        // push the new head\r\n        this.body.push(newHead);\r\n    }\r\n\r\n    nodeAt(index) {\r\n        return this.body[index];\r\n    }\r\n\r\n    getHead() {\r\n        return this.body[this.body.length - 1];\r\n    }\r\n\r\n    getTail() {\r\n        return this.body[0];\r\n    }\r\n\r\n    getLength() {\r\n        return this.body.length;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/snake.js"],"sourceRoot":""}