{"version":3,"sources":["webpack:///webpack/bootstrap 61d9ad6ffbd43d1527cd","webpack:///./js/main.js","webpack:///./js/ui.js","webpack:///./js/game.js"],"names":["core","row","col","ui","game","drawGrid","CELL_SIZE","ALIVE_CELL","DEAD_CELL","GameUI","options","rowNum","colNum","initCanvas","listen","canvas","document","getElementById","ctx","getContext","width","height","randomPattern","_drawCells","startBtn","stopBtn","addEventListener","_play","bind","evt","strokeStyle","lineWidth","i","beginPath","moveTo","lineTo","stroke","j","closePath","initSetup","cells","length","tile","args","alive","_fillCell","apply","x","y","status","fillStyle","fillRect","GameCore","push","randomStatus","Math","round","random"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;ACtCA;;;;AACA;;;;;;AAEA,KAAIA,OAAO,mBAAa;AACpBC,UAAK,EADe;AAEpBC,UAAK;AAFe,EAAb,CAAX;AAIA,KAAIC,KAAK,iBACL;AACIC,WAAMJ;AADV,EADK,CAAT;;AAMAG,IAAGE,QAAH,G;;;;;;;;;;;;;;;;ACbA,KAAMC,YAAa,EAAnB;AAAA,KAA6B;AACvBC,cAAa,MADnB;AAAA,KAC6B;AACvBC,aAAa,MAFnB,C,CAE6B;;KAEvBC,M;AACF,qBAAYC,OAAZ,EAAqB;AAAA;;AACjB,cAAKN,IAAL,GAAYM,QAAQN,IAApB;AACA,cAAKO,MAAL,GAAc,KAAKP,IAAL,CAAUH,GAAV,IAAiB,EAA/B;AACA,cAAKW,MAAL,GAAc,KAAKR,IAAL,CAAUF,GAAV,IAAiB,EAA/B;;AAEA,cAAKW,UAAL;;AAEA,cAAKC,MAAL;AACH;;AAED;;;;;sCACa;AACT,kBAAKC,MAAL,GAAcC,SAASC,cAAT,CAAwB,WAAxB,CAAd;AACA,kBAAKC,GAAL,GAAW,KAAKH,MAAL,CAAYI,UAAZ,CAAuB,IAAvB,CAAX;;AAEA,kBAAKJ,MAAL,CAAYK,KAAZ,GAAoB,KAAKR,MAAL,GAAcN,SAAlC;AACA,kBAAKS,MAAL,CAAYM,MAAZ,GAAqB,KAAKV,MAAL,GAAcL,SAAnC;AACH;;AAED;;;;qCACY;AACR,kBAAKF,IAAL,CAAUkB,aAAV;AACA,kBAAKC,UAAL;AACH;;;kCAES;AACN,kBAAKC,QAAL,GAAgBR,SAASC,cAAT,CAAwB,WAAxB,CAAhB;AACA,kBAAKQ,OAAL,GAAeT,SAASC,cAAT,CAAwB,UAAxB,CAAf;;AAEA,kBAAKO,QAAL,CAAcE,gBAAd,CAA+B,OAA/B,EAAwC,KAAKC,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAxC,EAA+D,KAA/D;AACA,kBAAKH,OAAL,CAAaC,gBAAb,CAA8B,OAA9B,EAAuC,UAAUG,GAAV,EAAe,CAErD,CAFD,EAEG,KAFH;AAGH;;AAED;;;;oCACW;AACP,kBAAKX,GAAL,CAASY,WAAT,GAAuB,MAAvB;AACA,kBAAKZ,GAAL,CAASa,SAAT,GAAqB,CAArB;AACA;AACA,kBAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,KAAKrB,MAA1B,EAAkCqB,GAAlC,EAAuC;AACnC,sBAAKd,GAAL,CAASe,SAAT;AACA,sBAAKf,GAAL,CAASgB,MAAT,CAAgB,CAAhB,EAAmB5B,YAAY0B,CAA/B;AACA,sBAAKd,GAAL,CAASiB,MAAT,CAAgB7B,YAAY,KAAKM,MAAjC,EAAyCN,YAAY0B,CAArD;AACA,sBAAKd,GAAL,CAASkB,MAAT;AACH;;AAED;AACA,kBAAK,IAAIC,IAAI,CAAb,EAAgBA,KAAK,KAAKzB,MAA1B,EAAkCyB,GAAlC,EAAuC;AACnC,sBAAKnB,GAAL,CAASe,SAAT;AACA,sBAAKf,GAAL,CAASgB,MAAT,CAAgB5B,YAAY+B,CAA5B,EAA+B,CAA/B;AACA,sBAAKnB,GAAL,CAASiB,MAAT,CAAgB7B,YAAY+B,CAA5B,EAA+B/B,YAAY,KAAKM,MAAhD;AACA,sBAAKM,GAAL,CAASkB,MAAT;AACH;;AAED,kBAAKlB,GAAL,CAASoB,SAAT;AACH;;;+BAEKT,G,EAAK;AACP,kBAAKU,SAAL;AACH;;AAED;;;;sCACa;AACT,kBAAK,IAAIP,IAAI,CAAb,EAAgBA,IAAI,KAAK5B,IAAL,CAAUoC,KAAV,CAAgBC,MAApC,EAA4CT,GAA5C,EAAiD;AAC7C,qBAAIU,OAAO,KAAKtC,IAAL,CAAUoC,KAAV,CAAgBR,CAAhB,CAAX;AACA,qBAAIW,OAAO,CAACD,KAAKxC,GAAL,GAAWI,SAAZ,EAAuBoC,KAAKzC,GAAL,GAAWK,SAAlC,EAA6CoC,KAAKE,KAAlD,CAAX;AACA,sBAAKC,SAAL,CAAeC,KAAf,CAAqB,IAArB,EAA2BH,IAA3B;AACH;AACJ;;AAED;;;;mCACUI,C,EAAGC,C,EAAGC,M,EAAQ;AACpB,kBAAK/B,GAAL,CAASgC,SAAT,GAAqBD,SAAS1C,UAAT,GAAsBC,SAA3C;AACA,kBAAKU,GAAL,CAASiC,QAAT,CAAkBJ,CAAlB,EAAqBC,CAArB,EAAwB1C,SAAxB,EAAmCA,SAAnC;AACH;;;;;;mBAGUG,M;;;;;;;;;;;;;;;;KCnFT2C,Q;AACF,uBAAY1C,OAAZ,EAAqB;AAAA;;AACjB,cAAK8B,KAAL,GAAa,EAAb;AACA,cAAKvC,GAAL,GAAWS,QAAQT,GAAR,IAAe,EAA1B;AACA,cAAKC,GAAL,GAAWQ,QAAQR,GAAR,IAAe,EAA1B;AACH;;;;yCAEgB;AACb,kBAAKsC,KAAL,GAAa,EAAb;AACA,kBAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAI,KAAK7C,GAAzB,EAA8B6C,GAA9B,EAAmC;AAC/B,sBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI,KAAK/C,GAAzB,EAA8B+C,GAA9B,EAAmC;AAC/B,0BAAKR,KAAL,CAAWa,IAAX,CAAgB;AACZT,gCAAOU,cADK;AAEZrD,8BAAK+C,CAFO;AAGZ9C,8BAAK6C;AAHO,sBAAhB;AAKH;AACJ;AACJ;;;oCAEW,CAEX;;;;;;AAGL;;;AACA,UAASO,YAAT,GAAyB;AACrB,YAAOC,KAAKC,KAAL,CAAWD,KAAKE,MAAL,EAAX,CAAP;AACH;;mBAEcL,Q","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 61d9ad6ffbd43d1527cd\n **/","import GameUI from './ui.js';\r\nimport GameCore from './game.js';\r\n\r\nlet core = new GameCore({\r\n    row: 50,\r\n    col: 70\r\n});\r\nlet ui = new GameUI(\r\n    {\r\n        game: core\r\n    }\r\n);\r\n\r\nui.drawGrid();\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/main.js\n **/","const CELL_SIZE  = 10,       // tile size, in 'px'\r\n      ALIVE_CELL = '#333',   // color of alive cell\r\n      DEAD_CELL  = '#fff';   // color of dead cell\r\n\r\nclass GameUI {\r\n    constructor(options) {\r\n        this.game = options.game;\r\n        this.rowNum = this.game.row || 40;\r\n        this.colNum = this.game.col || 60;\r\n\r\n        this.initCanvas();\r\n\r\n        this.listen();\r\n    }\r\n\r\n    // init canvas properties\r\n    initCanvas() {\r\n        this.canvas = document.getElementById('game-grid');\r\n        this.ctx = this.canvas.getContext('2d');\r\n\r\n        this.canvas.width = this.colNum * CELL_SIZE;\r\n        this.canvas.height = this.rowNum * CELL_SIZE;\r\n    }\r\n\r\n    // init game setup, such as initial pattern\r\n    initSetup() {\r\n        this.game.randomPattern();\r\n        this._drawCells();\r\n    }\r\n\r\n    listen () {\r\n        this.startBtn = document.getElementById('start-btn');\r\n        this.stopBtn = document.getElementById('stop-btn');\r\n\r\n        this.startBtn.addEventListener('click', this._play.bind(this), false);\r\n        this.stopBtn.addEventListener('click', function (evt) {\r\n\r\n        }, false);\r\n    }\r\n\r\n    // Make grid\r\n    drawGrid() {\r\n        this.ctx.strokeStyle = '#777';\r\n        this.ctx.lineWidth = 1;\r\n        // Draw horizontal lines\r\n        for (let i = 0; i <= this.rowNum; i++) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(0, CELL_SIZE * i);\r\n            this.ctx.lineTo(CELL_SIZE * this.colNum, CELL_SIZE * i );\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        // Vertical lines\r\n        for (let j = 0; j <= this.colNum; j++) {\r\n            this.ctx.beginPath();\r\n            this.ctx.moveTo(CELL_SIZE * j, 0);\r\n            this.ctx.lineTo(CELL_SIZE * j, CELL_SIZE * this.colNum);\r\n            this.ctx.stroke();\r\n        }\r\n\r\n        this.ctx.closePath();\r\n    }\r\n\r\n    _play(evt) {\r\n        this.initSetup();\r\n    }\r\n\r\n    // Fill color in grid cells based on the pattern\r\n    _drawCells() {\r\n        for (let i = 0; i < this.game.cells.length; i++) {\r\n            let tile = this.game.cells[i];\r\n            let args = [tile.col * CELL_SIZE, tile.row * CELL_SIZE, tile.alive];\r\n            this._fillCell.apply(this, args);\r\n        }\r\n    }\r\n\r\n    // Fill color in the given cell\r\n    _fillCell(x, y, status) {\r\n        this.ctx.fillStyle = status ? ALIVE_CELL : DEAD_CELL;\r\n        this.ctx.fillRect(x, y, CELL_SIZE, CELL_SIZE);\r\n    }\r\n}\r\n\r\nexport default GameUI;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/ui.js\n **/","class GameCore {\r\n    constructor(options) {\r\n        this.cells = [];\r\n        this.row = options.row || 40;\r\n        this.col = options.col || 60;\r\n    }\r\n\r\n    randomPattern () {\r\n        this.cells = [];\r\n        for (let x = 0; x < this.col; x++) {\r\n            for (let y = 0; y < this.row; y++) {\r\n                this.cells.push({\r\n                    alive: randomStatus(),\r\n                    row: y,\r\n                    col: x\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    populate () {\r\n\r\n    }\r\n}\r\n\r\n// private functions\r\nfunction randomStatus () {\r\n    return Math.round(Math.random());\r\n}\r\n\r\nexport default GameCore;\r\n\n\n\n/** WEBPACK FOOTER **\n ** ./js/game.js\n **/"],"sourceRoot":""}